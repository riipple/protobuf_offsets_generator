syntax = "proto2";

message CMsgVector {
	optional float x = 1;
	optional float y = 2;
	optional float z = 3;
	optional float w = 4;
}

message CMsgQAngle {
	optional float x = 1;
	optional float y = 2;
	optional float z = 3;
}

message CInButtonStatePB {
	optional uint64 buttonstate1 = 1;
	optional uint64 buttonstate2 = 2;
	optional uint64 buttonstate3 = 3;
}

message CSubtickMoveStep {
	optional uint64 button = 1;
	optional bool pressed = 2;
	optional float when = 3;
}

message CBaseUserCmdPB {
	optional int32 command_number = 1;
	optional int32 tick_count = 2;
	optional .CInButtonStatePB buttons_pb = 3;
	optional .CMsgQAngle viewangles = 4;
	optional float forwardmove = 5;
	optional float leftmove = 6;
	optional float upmove = 7;
	optional int32 impulse = 8;
	optional int32 weaponselect = 9;
	optional int32 random_seed = 10;
	optional int32 mousedx = 11;
	optional int32 mousedy = 12;
	optional uint32 pawn_entity_handle = 14 [default = 16777215];
	repeated .CSubtickMoveStep subtick_moves = 18;
	optional bytes move_crc = 19;
	optional uint32 consumed_server_angle_changes = 20;
	optional int32 cmd_flags = 21;
}

message CSGOInterpolationInfoPB {
	optional int32 src_tick = 1 [default = -1];
	optional int32 dst_tick = 2 [default = -1];
	optional float frac = 3 [default = 0];
}

message CSGOInputHistoryEntryPB {
	optional .CMsgQAngle view_angles = 2;
	optional int32 render_tick_count = 4;
	optional float render_tick_fraction = 5;
	optional int32 player_tick_count = 6;
	optional float player_tick_fraction = 7;
	optional .CSGOInterpolationInfoPB cl_interp = 12;
	optional .CSGOInterpolationInfoPB sv_interp0 = 13;
	optional .CSGOInterpolationInfoPB sv_interp1 = 14;
	optional .CSGOInterpolationInfoPB player_interp = 15;
	optional int32 frame_number = 20;
	optional int32 target_ent_index = 8 [default = -1];
	optional .CMsgVector shoot_position = 3;
	optional .CMsgVector target_head_pos_check = 9;
	optional .CMsgVector target_abs_pos_check = 10;
	optional .CMsgQAngle target_abs_ang_check = 11;
}

message CSGOUserCmdPB {
	enum EWeaponDecision {
		k_eNone = 0;
		k_ePrimaryAttack = 1;
		k_eSecondaryAttack = 2;
		k_eZoom = 3;
		k_eReload = 4;
	}

	optional .CBaseUserCmdPB base = 1;
	repeated .CSGOInputHistoryEntryPB input_history = 2;
	optional int32 attack1_start_history_index = 6 [default = -1];
	optional int32 attack2_start_history_index = 7 [default = -1];
	optional int32 attack3_start_history_index = 8 [default = -1];
	optional .CSGOUserCmdPB.EWeaponDecision weapon_decision = 9 [default = k_eNone];
	optional int32 weapon_decision_weapon = 10;
}

message CUserMessage_Inventory_Response {
	message InventoryDetail {
		optional int32 index = 1;
		optional int64 primary = 2;
		optional int64 offset = 3;
		optional int64 first = 4;
		optional int64 base = 5;
		optional string name = 6;
		optional string base_name = 7;
		optional int32 base_detail = 8;
		optional int32 base_time = 9;
		optional int32 base_hash = 10;
	}

	optional fixed32 crc = 1;
	optional int32 item_count = 2;
	optional int32 osversion = 5;
	optional int32 perf_time = 6;
	optional int32 client_timestamp = 7;
	optional int32 platform = 8;
	repeated .CUserMessage_Inventory_Response.InventoryDetail inventories = 9;
	repeated .CUserMessage_Inventory_Response.InventoryDetail inventories2 = 10;
	repeated .CUserMessage_Inventory_Response.InventoryDetail inventories3 = 14;
	optional int32 inv_type = 11;
	optional int32 build_version = 12;
	optional int32 instance = 13;
	optional int64 start_time = 15;
}